/*
 * Visier Authentication APIs
 * Visier APIs for generating authentication tokens
 *
 * The version of the OpenAPI document: 22222222.99201.1200
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AuthenticationRequest;
import com.konfigthis.client.model.Status;
import com.konfigthis.client.model.TokenRequestBody;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthenticationApi
 */
@Disabled
public class AuthenticationApiTest {

    private static AuthenticationApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new AuthenticationApi(apiClient);
    }

    /**
     * Generate a Visier authentication token
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aSIDTokenAuthenticationTest() throws ApiException {
        String username = null;
        String password = null;
        String response = api.aSIDTokenAuthentication()
                .username(username)
                .password(password)
                .execute();
        // TODO: test validations
    }

    /**
     * Initiate an OAuth2 authorization code flow.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void oAuth2AuthorizeTest() throws ApiException {
        String responseType = null;
        String clientId = null;
        String redirectUri = null;
        String scope = null;
        Status response = api.oAuth2Authorize(responseType, clientId)
                .redirectUri(redirectUri)
                .scope(scope)
                .execute();
        // TODO: test validations
    }

    /**
     * Generate a JSON Web Token (JWT) for the specified user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void oAuth2TokenTest() throws ApiException {
        String grantType = null;
        String clientId = null;
        String redirectUri = null;
        String code = null;
        String username = null;
        String password = null;
        String asidToken = null;
        String response = api.oAuth2Token()
                .grantType(grantType)
                .clientId(clientId)
                .redirectUri(redirectUri)
                .code(code)
                .username(username)
                .password(password)
                .asidToken(asidToken)
                .execute();
        // TODO: test validations
    }

    /**
     * Generate a legacy Visier secure ticket
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ticketAuthenticationTest() throws ApiException {
        String username = null;
        String password = null;
        String response = api.ticketAuthentication()
                .username(username)
                .password(password)
                .execute();
        // TODO: test validations
    }

}
